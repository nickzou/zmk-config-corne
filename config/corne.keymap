/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

&mt { flavor = "tap-preferred"; };

/ {
    macros {
        select_all: select_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(A)>;
            label = "SELECT_ALL";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>;
            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(V)>;
            label = "PASTE";
        };

        tmux_prefix: tmux_prefix {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B)>;
            label = "TMUX_PREFIX";
        };
    };

    behaviors {
        y_capsword: y_capsword {
            compatible = "zmk,behavior-hold-tap";
            label = "Y_CAPSWORD";
            bindings = <&caps_word>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6>;
            tapping-term-ms = <200>;
        };

        tmux_space: tmux_space {
            compatible = "zmk,behavior-hold-tap";
            label = "TMUX_SPACE";
            bindings = <&tmux_prefix>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&select_all  &kp Q           &kp W           &kp E               &kp R             &kp T                  &y_capsword 0 Y  &mt CAPSLOCK U     &kp I                &kp O            &kp P               &kp BSPC
&copy        &mt LEFT_ALT A  &mt LEFT_GUI S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G                  &mt SQT H        &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_GUI L  &mt RIGHT_ALT SEMI  &kp SQT
&paste       &kp Z           &kp X           &kp C               &kp V             &kp B                  &kp N            &kp M              &kp COMMA            &kp DOT          &kp FSLH            &kp RSHFT
                                             &kp TAB             &lt 1 MINUS       &tmux_space 0 SPACE    &kp RETURN       &lt 2 BACKSPACE    &kp ESCAPE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1    |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | LCTRL| BTCLR | BT0 | BT1 | BT2 | BT3 |   | LFT | DWN |  UP | RGT |     |      |
            // | ESC  |       | HOME| PGUP| PGDN| END |   |     |     |     |     |     |      |
            //                      | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1      &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&kp LCTRL  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp ESC    &trans      &kp HOME      &kp PG_UP     &kp PG_DN     &kp END         &trans    &trans    &trans    &trans     &trans  &trans
                                     &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |   !   |   @   |   #   |   $   |   %   |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |RGB_TOG|RGB_HUI|RGB_SAI|RGB_VAI|       |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |RGB_MOD|RGB_HUD|RGB_SAD|RGB_VAD|QK_BOOT|   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                            | GUI |     |  SPC  |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL         &kp AT           &kp HASH         &kp DLLR         &kp PRCNT      &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &trans         &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &bootloader    &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                             &kp LGUI         &trans           &kp SPACE      &kp RET    &trans     &kp RALT
            >;
        };
    };
};
