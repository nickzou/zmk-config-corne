/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&led_strip { chain-length = <27>; };

&mt { flavor = "tap-preferred"; };

/ {
    macros {
        select_all: select_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(A)>;
            label = "SELECT_ALL";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>;
            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(V)>;
            label = "PASTE";
        };

        tmux_prefix: tmux_prefix {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B)>;
            label = "TMUX_PREFIX";
        };

        arrow_operator: arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN>;
            label = "ARROW";
        };

        thin_operator: thin_operator {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GREATER_THAN>;
            label = "THIN_OPERATOR";
        };
    };

    behaviors {
        y_capsword: y_capsword {
            compatible = "zmk,behavior-hold-tap";
            label = "Y_CAPSWORD";
            bindings = <&caps_word>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6>;
            tapping-term-ms = <200>;
        };

        tmux_space: tmux_space {
            compatible = "zmk,behavior-hold-tap";
            label = "TMUX_SPACE";
            bindings = <&tmux_prefix>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&select_all  &kp Q           &kp W           &kp E               &kp R             &kp T                  &y_capsword 0 Y  &mt CAPSLOCK U     &kp I                &kp O            &kp P               &none
&copy        &mt LEFT_ALT A  &mt LEFT_GUI S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G                  &mt SQT H        &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_GUI L  &mt RIGHT_ALT SEMI  &none
&paste       &kp Z           &kp X           &kp C               &kp V             &kp B                  &kp N            &kp M              &kp COMMA            &kp DOT          &kp FSLH            &none
                                             &kp TAB             &lt 1 MINUS       &tmux_space 0 SPACE    &kp RETURN       &lt 2 BACKSPACE    &kp ESCAPE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1    |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | LCTRL| BTCLR | BT0 | BT1 | BT2 | BT3 |   | LFT | DWN |  UP | RGT |     |      |
            // | ESC  |       | HOME| PGUP| PGDN| END |   |     |     |     |     |     |      |
            //                      | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH               &kp DOLLAR       &kp PERCENT          &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp GRAVE        &kp BACKSLASH  &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp LEFT_BRACKET     &kp LEFT        &kp DOWN       &kp UP_ARROW  &kp RIGHT             &trans                 &trans
&trans  &kp TILDE        &kp PIPE       &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET    &kp UNDERSCORE  &kp PLUS       &kp EQUAL     &arrow_operator       &thin_operator         &trans
                                        &trans                 &trans           &trans               &kp RET         &trans         &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |   !   |   @   |   #   |   $   |   %   |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |RGB_TOG|RGB_HUI|RGB_SAI|RGB_VAI|       |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |RGB_MOD|RGB_HUD|RGB_SAD|RGB_VAD|QK_BOOT|   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                            | GUI |     |  SPC  |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9    &trans    &trans    &trans  &trans     &trans  &trans
&trans  &trans  &trans        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &trans    &trans    &trans  &trans     &trans  &trans
                              &trans        &trans        &trans          &trans    &trans    &trans
            >;
        };
    };
};
